# Created by pyp2rpm-3.3.2
%global pypi_name pysam

Name:           python-%{pypi_name}
Version:        0.22.1
Release:        %autorelease
Summary:        pysam

License:        MIT AND BSD-1-Clause AND BSD-2-Clause AND BSD-3-Clause
URL:            https://github.com/pysam-developers/pysam
Source0:        %{pypi_source}
Patch:          python-pysam-configure-c99.patch

BuildRequires:  python3-devel
BuildRequires:  python3dist(setuptools)
BuildRequires:  python3dist(sphinx)
BuildRequires:  python3dist(cython)
BuildRequires:  gcc
BuildRequires:  zlib-devel
BuildRequires:  bzip2-devel
BuildRequires:  xz-devel
BuildRequires:  python3-sphinx_rtd_theme

%description
pysam - a python module for reading, manipulating and writing genomic data
sets.pysam is a lightweight wrapper of the htslib C-API and provides facilities
to read and write SAM/BAM/VCF/BCF/BED/GFF/GTF/FASTA/FASTQ files as well as
access to the command line functionality of the samtools and bcftools packages.
The module supports compression and random access through indexing.

%package -n     python3-%{pypi_name}
Summary:        %{summary}
%{?python_provide:%python_provide python3-%{pypi_name}}
Provides:  bundled(samtools) = 1.18
Provides:  bundled(htslib) = 1.18
Provides:  bundled(bcftools) = 1.18

%description -n python3-%{pypi_name}
pysam - a python module for reading, manipulating and writing genomic data
sets.pysam is a lightweight wrapper of the htslib C-API and provides facilities
to read and write SAM/BAM/VCF/BCF/BED/GFF/GTF/FASTA/FASTQ files as well as
access to the command line functionality of the samtools and bcftools packages.
The module supports compression and random access through indexing.

%package -n     python3-%{pypi_name}-devel
Summary:        %{summary}

Requires: python3-%{pypi_name}%{?_isa} = %{version}-%{release}
%description -n python3-%{pypi_name}-devel
Development files for pysam

%package -n python-%{pypi_name}-doc
Summary:        pysam documentation
BuildArch: noarch
%description -n python-%{pypi_name}-doc
Documentation for pysam

%prep
%autosetup -n %{pypi_name}-%{version} -p 1
# Remove bundled egg-info
rm -rf %{pypi_name}.egg-info

# Remove pre-generated files
rm $(grep -rl '/\* Generated by Cython')

%build
FORCE_CYTHON=1 %py3_build
# generate html docs 
PYTHONPATH=$(echo $PWD/build/lib.linux*) sphinx-build-3 doc html
# remove the sphinx-build leftovers
rm -rf html/.{doctrees,buildinfo}

%install
%py3_install
rm ${RPM_BUILD_ROOT}%{python3_sitearch}/%{pypi_name}/*pyx
rm ${RPM_BUILD_ROOT}%{python3_sitearch}/%{pypi_name}/*c

%files -n python3-%{pypi_name}
%doc README.rst
%license COPYING
%license */LICENSE
%dir %{python3_sitearch}/%{pypi_name}
%{python3_sitearch}/%{pypi_name}/*so
%{python3_sitearch}/%{pypi_name}/*py
%{python3_sitearch}/%{pypi_name}/*pyi
%{python3_sitearch}/%{pypi_name}/py.typed
%{python3_sitearch}/%{pypi_name}/__pycache__
%{python3_sitearch}/%{pypi_name}-%{version}-py%{python3_version}.egg-info

%files -n python3-%{pypi_name}-devel
%{python3_sitearch}/%{pypi_name}/*h
%{python3_sitearch}/%{pypi_name}/*pxd
%{python3_sitearch}/%{pypi_name}/include

%files -n python-%{pypi_name}-doc
%doc html

%changelog
%autochangelog
